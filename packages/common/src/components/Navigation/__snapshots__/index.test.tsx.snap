// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Navigation /> rendering basic 1`] = `
.c0 {
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  padding: 0 2rem;
  width: 100%;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c1 {
  width: 100%;
  max-width: 1440px;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  padding: 1rem 0;
  width: 100%;
  color: white;
  z-index: 5;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-flex: auto;
  -ms-flex: auto;
  flex: auto;
}

.c4 {
  color: white;
}

.c5 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-transition: 0.2s ease color;
  transition: 0.2s ease color;
  font-size: 1.125rem;
  -webkit-text-decoration: none;
  text-decoration: none;
  color: white;
  margin: 0 1rem;
  font-weight: 400;
}

.c5:hover {
  color: #40A9F3;
}

.c6 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-transition: 0.2s ease color;
  transition: 0.2s ease color;
  font-size: 1.125rem;
  -webkit-text-decoration: none;
  text-decoration: none;
  color: white;
  margin: 0 1rem;
  font-weight: 400;
}

.c6:hover {
  color: #40A9F3;
}

.c8 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-transition: 0.2s ease color;
  transition: 0.2s ease color;
  font-size: 1.125rem;
  -webkit-text-decoration: none;
  text-decoration: none;
  color: white;
  margin: 0 1rem;
  font-weight: 400;
}

.c8:hover {
  color: #40A9F3;
}

.c9 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-transition: 0.2s ease color;
  transition: 0.2s ease color;
  font-size: 1.125rem;
  -webkit-text-decoration: none;
  text-decoration: none;
  color: white;
  margin: 0 1rem;
  font-weight: 400;
  -webkit-transition: 0.3s ease all;
  transition: 0.3s ease all;
  padding: 0.2rem 0.8rem;
  border-radius: 4px;
  font-weight: 600;
  background-color: #40A9F3;
  border: 2px solid rgba(255,255,255,0.3);
}

.c9:hover {
  color: #40A9F3;
}

.c9:hover {
  color: white;
  background-color: #7fc3f7;
  border-color: transparent;
}

.c7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

@media (max-width:660px) {
  .c4 {
    width: 38px;
    height: 38px;
  }
}

@media (max-width:660px) {
  .c5 {
    font-size: 1rem;
    margin: 0 .5rem;
  }
}

@media (max-width:660px) {
  .c6 {
    font-size: 1rem;
    margin: 0 .5rem;
  }
}

@media (max-width:970px) {
  .c6 {
    display: none;
  }
}

@media (max-width:660px) {
  .c8 {
    font-size: 1rem;
    margin: 0 .5rem;
  }
}

@media (max-width:875px) {
  .c8 {
    display: none;
  }
}

@media (max-width:660px) {
  .c9 {
    font-size: 1rem;
    margin: 0 .5rem;
  }
}

@media (max-width:660px) {
  .c9 {
    display: none;
  }
}

<Navigation>
  <_default
    width={1440}
  >
    <styled.div
      responsive={false}
    >
      <StyledComponent
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-bdVaJa",
              "isStatic": false,
              "lastClassName": "c0",
              "rules": Array [
                "
  box-sizing: border-box;
  display: flex;

  padding: 0 2rem;

  width: 100%;
  justify-content: center;

  ",
                [Function],
                ";
",
              ],
            },
            "displayName": "styled.div",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-bdVaJa",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
        responsive={false}
      >
        <div
          className="c0"
        >
          <styled.div
            width={1440}
          >
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-bwzfXH",
                    "isStatic": false,
                    "lastClassName": "c1",
                    "rules": Array [
                      "
  width: 100%;
  max-width: ",
                      [Function],
                      "px;
",
                    ],
                  },
                  "displayName": "styled.div",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-bwzfXH",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
              width={1440}
            >
              <div
                className="c1"
                width={1440}
              >
                <styled.div>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-htpNat",
                          "isStatic": true,
                          "lastClassName": "c2",
                          "rules": Array [
                            "
  display: flex;
  align-items: center;
  padding: 1rem 0;
  width: 100%;
  color: white;
  z-index: 5;
",
                          ],
                        },
                        "displayName": "styled.div",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-htpNat",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="c2"
                    >
                      <styled.div>
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-bxivhb",
                                "isStatic": true,
                                "lastClassName": "c3",
                                "rules": Array [
                                  "
  display: flex;
  align-items: center;
  flex: auto;
",
                                ],
                              },
                              "displayName": "styled.div",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-bxivhb",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <div
                            className="c3"
                          >
                            <a
                              href="/"
                            >
                              <Styled(_default)
                                height={40}
                                style={
                                  Object {
                                    "marginRight": "1rem",
                                  }
                                }
                                width={40}
                              >
                                <StyledComponent
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "sc-ifAKCX",
                                        "isStatic": true,
                                        "lastClassName": "c4",
                                        "rules": Array [
                                          "
  color: white;
  ",
                                          "
    @media (max-width: 660px) {
      ",
                                          "
    width: 38px;
    height: 38px;
  ",
                                          ";
    }
  ",
                                          ";
",
                                        ],
                                      },
                                      "displayName": "Styled(_default)",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "sc-ifAKCX",
                                      "target": [Function],
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                  height={40}
                                  style={
                                    Object {
                                      "marginRight": "1rem",
                                    }
                                  }
                                  width={40}
                                >
                                  <_default
                                    className="c4"
                                    height={40}
                                    style={
                                      Object {
                                        "marginRight": "1rem",
                                      }
                                    }
                                    width={40}
                                  >
                                    <svg
                                      aria-label="CodeSandbox"
                                      className="c4"
                                      height="40px"
                                      role="presentation"
                                      style={
                                        Object {
                                          "marginRight": "1rem",
                                          "verticalAlign": "middle",
                                        }
                                      }
                                      viewBox="0 0 1024 1024"
                                      width="40px"
                                      x="0px"
                                      y="0px"
                                    >
                                      <title>
                                        CodeSandbox
                                      </title>
                                      <g
                                        id="Layer_1"
                                      >
                                        <polyline
                                          fill="currentColor"
                                          points="719.001,851 719.001,639.848 902,533.802 902,745.267 719.001,851"
                                        />
                                        <polyline
                                          fill="currentColor"
                                          points="302.082,643.438 122.167,539.135 122.167,747.741 302.082,852.573 302.082,643.438"
                                        />
                                        <polyline
                                          fill="currentColor"
                                          points="511.982,275.795 694.939,169.633 512.06,63 328.436,169.987 511.982,275.795"
                                        />
                                      </g>
                                      <g
                                        id="Layer_2"
                                      >
                                        <polyline
                                          fill="none"
                                          points="899,287.833 509,513 509,963"
                                          stroke="currentColor"
                                          strokeMiterlimit="10"
                                          strokeWidth="80"
                                        />
                                        <line
                                          fill="none"
                                          stroke="currentColor"
                                          strokeMiterlimit="10"
                                          strokeWidth="80"
                                          x1="122.167"
                                          x2="511.5"
                                          y1="289"
                                          y2="513"
                                        />
                                        <polygon
                                          fill="none"
                                          points="121,739.083 510.917,963.042 901,738.333 901,288 511,62 121,289"
                                          stroke="currentColor"
                                          strokeMiterlimit="10"
                                          strokeWidth="80"
                                        />
                                      </g>
                                    </svg>
                                  </_default>
                                </StyledComponent>
                              </Styled(_default)>
                            </a>
                            <styled.a
                              href="/explore"
                            >
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-EHOje",
                                      "isStatic": false,
                                      "lastClassName": "c9",
                                      "rules": Array [
                                        "
  display: inline-flex;
  align-items: center;
  transition: 0.2s ease color;
  font-size: 1.125rem;
  text-decoration: none;
  color: white;

  margin: 0 1rem;
  font-weight: 400;

  &:hover {
    color: ",
                                        [Function],
                                        ";
  }

  ",
                                        [Function],
                                        ";

  ",
                                        "
    @media (max-width: 660px) {
      ",
                                        "
    font-size: 1rem;
    margin: 0 .5rem;
  ",
                                        ";
    }
  ",
                                        ";

  ",
                                        [Function],
                                        ";

  ",
                                        [Function],
                                        ";
",
                                      ],
                                    },
                                    "displayName": "styled.a",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-EHOje",
                                    "target": "a",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                href="/explore"
                              >
                                <a
                                  className="c5"
                                  href="/explore"
                                >
                                  Explore
                                </a>
                              </StyledComponent>
                            </styled.a>
                            <styled.a
                              href="/search"
                            >
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-EHOje",
                                      "isStatic": false,
                                      "lastClassName": "c9",
                                      "rules": Array [
                                        "
  display: inline-flex;
  align-items: center;
  transition: 0.2s ease color;
  font-size: 1.125rem;
  text-decoration: none;
  color: white;

  margin: 0 1rem;
  font-weight: 400;

  &:hover {
    color: ",
                                        [Function],
                                        ";
  }

  ",
                                        [Function],
                                        ";

  ",
                                        "
    @media (max-width: 660px) {
      ",
                                        "
    font-size: 1rem;
    margin: 0 .5rem;
  ",
                                        ";
    }
  ",
                                        ";

  ",
                                        [Function],
                                        ";

  ",
                                        [Function],
                                        ";
",
                                      ],
                                    },
                                    "displayName": "styled.a",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-EHOje",
                                    "target": "a",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                href="/search"
                              >
                                <a
                                  className="c5"
                                  href="/search"
                                >
                                  Search
                                </a>
                              </StyledComponent>
                            </styled.a>
                            <styled.a
                              href="/docs"
                            >
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-EHOje",
                                      "isStatic": false,
                                      "lastClassName": "c9",
                                      "rules": Array [
                                        "
  display: inline-flex;
  align-items: center;
  transition: 0.2s ease color;
  font-size: 1.125rem;
  text-decoration: none;
  color: white;

  margin: 0 1rem;
  font-weight: 400;

  &:hover {
    color: ",
                                        [Function],
                                        ";
  }

  ",
                                        [Function],
                                        ";

  ",
                                        "
    @media (max-width: 660px) {
      ",
                                        "
    font-size: 1rem;
    margin: 0 .5rem;
  ",
                                        ";
    }
  ",
                                        ";

  ",
                                        [Function],
                                        ";

  ",
                                        [Function],
                                        ";
",
                                      ],
                                    },
                                    "displayName": "styled.a",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-EHOje",
                                    "target": "a",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                href="/docs"
                              >
                                <a
                                  className="c5"
                                  href="/docs"
                                >
                                  Docs
                                </a>
                              </StyledComponent>
                            </styled.a>
                            <styled.a
                              href="/blog"
                            >
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-EHOje",
                                      "isStatic": false,
                                      "lastClassName": "c9",
                                      "rules": Array [
                                        "
  display: inline-flex;
  align-items: center;
  transition: 0.2s ease color;
  font-size: 1.125rem;
  text-decoration: none;
  color: white;

  margin: 0 1rem;
  font-weight: 400;

  &:hover {
    color: ",
                                        [Function],
                                        ";
  }

  ",
                                        [Function],
                                        ";

  ",
                                        "
    @media (max-width: 660px) {
      ",
                                        "
    font-size: 1rem;
    margin: 0 .5rem;
  ",
                                        ";
    }
  ",
                                        ";

  ",
                                        [Function],
                                        ";

  ",
                                        [Function],
                                        ";
",
                                      ],
                                    },
                                    "displayName": "styled.a",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-EHOje",
                                    "target": "a",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                href="/blog"
                              >
                                <a
                                  className="c5"
                                  href="/blog"
                                >
                                  Blog
                                </a>
                              </StyledComponent>
                            </styled.a>
                            <styled.a
                              hideOn={970}
                              href="https://github.com/codesandbox/codesandbox-client"
                              rel="noopener noreferrer"
                              target="_blank"
                            >
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-EHOje",
                                      "isStatic": false,
                                      "lastClassName": "c9",
                                      "rules": Array [
                                        "
  display: inline-flex;
  align-items: center;
  transition: 0.2s ease color;
  font-size: 1.125rem;
  text-decoration: none;
  color: white;

  margin: 0 1rem;
  font-weight: 400;

  &:hover {
    color: ",
                                        [Function],
                                        ";
  }

  ",
                                        [Function],
                                        ";

  ",
                                        "
    @media (max-width: 660px) {
      ",
                                        "
    font-size: 1rem;
    margin: 0 .5rem;
  ",
                                        ";
    }
  ",
                                        ";

  ",
                                        [Function],
                                        ";

  ",
                                        [Function],
                                        ";
",
                                      ],
                                    },
                                    "displayName": "styled.a",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-EHOje",
                                    "target": "a",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                hideOn={970}
                                href="https://github.com/codesandbox/codesandbox-client"
                                rel="noopener noreferrer"
                                target="_blank"
                              >
                                <a
                                  className="c6"
                                  href="https://github.com/codesandbox/codesandbox-client"
                                  rel="noopener noreferrer"
                                  target="_blank"
                                >
                                  GitHub
                                </a>
                              </StyledComponent>
                            </styled.a>
                            <styled.a
                              href="/jobs"
                            >
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-EHOje",
                                      "isStatic": false,
                                      "lastClassName": "c9",
                                      "rules": Array [
                                        "
  display: inline-flex;
  align-items: center;
  transition: 0.2s ease color;
  font-size: 1.125rem;
  text-decoration: none;
  color: white;

  margin: 0 1rem;
  font-weight: 400;

  &:hover {
    color: ",
                                        [Function],
                                        ";
  }

  ",
                                        [Function],
                                        ";

  ",
                                        "
    @media (max-width: 660px) {
      ",
                                        "
    font-size: 1rem;
    margin: 0 .5rem;
  ",
                                        ";
    }
  ",
                                        ";

  ",
                                        [Function],
                                        ";

  ",
                                        [Function],
                                        ";
",
                                      ],
                                    },
                                    "displayName": "styled.a",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-EHOje",
                                    "target": "a",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                href="/jobs"
                              >
                                <a
                                  className="c5"
                                  href="/jobs"
                                >
                                  Careers
                                </a>
                              </StyledComponent>
                            </styled.a>
                          </div>
                        </StyledComponent>
                      </styled.div>
                      <styled.div>
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-bZQynM",
                                "isStatic": true,
                                "lastClassName": "c7",
                                "rules": Array [
                                  "
  display: flex;
  align-items: center;
",
                                ],
                              },
                              "displayName": "styled.div",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-bZQynM",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <div
                            className="c7"
                          >
                            <styled.a
                              hideOn={875}
                              href="/signin"
                            >
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-EHOje",
                                      "isStatic": false,
                                      "lastClassName": "c9",
                                      "rules": Array [
                                        "
  display: inline-flex;
  align-items: center;
  transition: 0.2s ease color;
  font-size: 1.125rem;
  text-decoration: none;
  color: white;

  margin: 0 1rem;
  font-weight: 400;

  &:hover {
    color: ",
                                        [Function],
                                        ";
  }

  ",
                                        [Function],
                                        ";

  ",
                                        "
    @media (max-width: 660px) {
      ",
                                        "
    font-size: 1rem;
    margin: 0 .5rem;
  ",
                                        ";
    }
  ",
                                        ";

  ",
                                        [Function],
                                        ";

  ",
                                        [Function],
                                        ";
",
                                      ],
                                    },
                                    "displayName": "styled.a",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-EHOje",
                                    "target": "a",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                hideOn={875}
                                href="/signin"
                              >
                                <a
                                  className="c8"
                                  href="/signin"
                                >
                                  Sign In
                                </a>
                              </StyledComponent>
                            </styled.a>
                            <styled.a
                              button={true}
                              hidePhone={true}
                              href="/s"
                              rel="noopener noreferrer"
                            >
                              <StyledComponent
                                button={true}
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-EHOje",
                                      "isStatic": false,
                                      "lastClassName": "c9",
                                      "rules": Array [
                                        "
  display: inline-flex;
  align-items: center;
  transition: 0.2s ease color;
  font-size: 1.125rem;
  text-decoration: none;
  color: white;

  margin: 0 1rem;
  font-weight: 400;

  &:hover {
    color: ",
                                        [Function],
                                        ";
  }

  ",
                                        [Function],
                                        ";

  ",
                                        "
    @media (max-width: 660px) {
      ",
                                        "
    font-size: 1rem;
    margin: 0 .5rem;
  ",
                                        ";
    }
  ",
                                        ";

  ",
                                        [Function],
                                        ";

  ",
                                        [Function],
                                        ";
",
                                      ],
                                    },
                                    "displayName": "styled.a",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-EHOje",
                                    "target": "a",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                hidePhone={true}
                                href="/s"
                                rel="noopener noreferrer"
                              >
                                <a
                                  className="c9"
                                  href="/s"
                                  rel="noopener noreferrer"
                                >
                                  Create Sandbox
                                </a>
                              </StyledComponent>
                            </styled.a>
                          </div>
                        </StyledComponent>
                      </styled.div>
                    </div>
                  </StyledComponent>
                </styled.div>
              </div>
            </StyledComponent>
          </styled.div>
        </div>
      </StyledComponent>
    </styled.div>
  </_default>
</Navigation>
`;
