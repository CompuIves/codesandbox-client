// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Button /> rendering Danger Button 1`] = `
.c0 {
  -webkit-transition: 0.3s ease all;
  transition: 0.3s ease all;
  font-family: Poppins,Roboto,sans-serif;
  border: none;
  outline: none;
  background-color: #DC3545;
  background-size: 720%;
  border: 2px solid #E25D6A;
  border-radius: 4px;
  box-sizing: border-box;
  font-size: 1.125em;
  text-align: center;
  color: white;
  font-weight: 600;
  width: inherit;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -webkit-text-decoration: none;
  text-decoration: none;
  padding: 0.65em 2.25em;
  cursor: pointer;
}

.c0:hover {
  background-color: #E25D6A;
}

<ButtonComponent
  danger={true}
>
  <styled.button
    danger={true}
    style={Object {}}
  >
    <StyledComponent
      danger={true}
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-htpNat",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "
  ",
              "
  transition: 0.3s ease all;
  font-family: Poppins, Roboto, sans-serif;

  border: none;
  outline: none;
  ",
              [Function],
              ";
  background-size: 720%;

  border: ",
              [Function],
              ";
  border-radius: 4px;

  box-sizing: border-box;
  font-size: 1.125em;
  text-align: center;
  color: ",
              [Function],
              ";
  font-weight: 600;
  width: ",
              [Function],
              ";

  user-select: none;
  text-decoration: none;

  ",
              [Function],
              ";

  /* svg {
     font-size: 1.125em;
  } */

  ",
              [Function],
              ";

  &:hover {
    ",
              [Function],
              ";
    ",
              [Function],
              ";
  }
",
              ";
",
            ],
          },
          "displayName": "styled.button",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-htpNat",
          "target": "button",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
      style={Object {}}
    >
      <button
        className="c0"
        style={Object {}}
      >
        Le button
      </button>
    </StyledComponent>
  </styled.button>
</ButtonComponent>
`;

exports[`<Button /> rendering Href Button 1`] = `
.c0 {
  -webkit-transition: 0.3s ease all;
  transition: 0.3s ease all;
  font-family: Poppins,Roboto,sans-serif;
  border: none;
  outline: none;
  background-color: #40A9F3;
  background-size: 720%;
  border: 2px solid #66B9F4;
  border-radius: 4px;
  box-sizing: border-box;
  font-size: 1.125em;
  text-align: center;
  color: white;
  font-weight: 600;
  width: inherit;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -webkit-text-decoration: none;
  text-decoration: none;
  padding: 0.65em 2.25em;
  cursor: pointer;
}

.c0:hover {
  background-color: #66b9f4;
}

<ButtonComponent
  href="#"
>
  <styled.a
    href="#"
    style={Object {}}
  >
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bwzfXH",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "
  ",
              "
  transition: 0.3s ease all;
  font-family: Poppins, Roboto, sans-serif;

  border: none;
  outline: none;
  ",
              [Function],
              ";
  background-size: 720%;

  border: ",
              [Function],
              ";
  border-radius: 4px;

  box-sizing: border-box;
  font-size: 1.125em;
  text-align: center;
  color: ",
              [Function],
              ";
  font-weight: 600;
  width: ",
              [Function],
              ";

  user-select: none;
  text-decoration: none;

  ",
              [Function],
              ";

  /* svg {
     font-size: 1.125em;
  } */

  ",
              [Function],
              ";

  &:hover {
    ",
              [Function],
              ";
    ",
              [Function],
              ";
  }
",
              ";
",
            ],
          },
          "displayName": "styled.a",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-bwzfXH",
          "target": "a",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
      href="#"
      style={Object {}}
    >
      <a
        className="c0"
        href="#"
        style={Object {}}
      >
        Le button
      </a>
    </StyledComponent>
  </styled.a>
</ButtonComponent>
`;

exports[`<Button /> rendering Secondary Button 1`] = `
.c0 {
  -webkit-transition: 0.3s ease all;
  transition: 0.3s ease all;
  font-family: Poppins,Roboto,sans-serif;
  border: none;
  outline: none;
  background-color: transparent;
  background-size: 720%;
  border: 2px solid #66B9F4;
  border-radius: 4px;
  box-sizing: border-box;
  font-size: 1.125em;
  text-align: center;
  color: rgba(255,255,255,0.75);
  font-weight: 600;
  width: inherit;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -webkit-text-decoration: none;
  text-decoration: none;
  padding: 0.65em 2.25em;
  cursor: pointer;
}

.c0:hover {
  background-color: #66b9f4;
  color: white;
}

<ButtonComponent
  secondary={true}
>
  <styled.button
    secondary={true}
    style={Object {}}
  >
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-htpNat",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "
  ",
              "
  transition: 0.3s ease all;
  font-family: Poppins, Roboto, sans-serif;

  border: none;
  outline: none;
  ",
              [Function],
              ";
  background-size: 720%;

  border: ",
              [Function],
              ";
  border-radius: 4px;

  box-sizing: border-box;
  font-size: 1.125em;
  text-align: center;
  color: ",
              [Function],
              ";
  font-weight: 600;
  width: ",
              [Function],
              ";

  user-select: none;
  text-decoration: none;

  ",
              [Function],
              ";

  /* svg {
     font-size: 1.125em;
  } */

  ",
              [Function],
              ";

  &:hover {
    ",
              [Function],
              ";
    ",
              [Function],
              ";
  }
",
              ";
",
            ],
          },
          "displayName": "styled.button",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-htpNat",
          "target": "button",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
      secondary={true}
      style={Object {}}
    >
      <button
        className="c0"
        style={Object {}}
      >
        Le button
      </button>
    </StyledComponent>
  </styled.button>
</ButtonComponent>
`;

exports[`<Button /> rendering Small Button 1`] = `
.c0 {
  -webkit-transition: 0.3s ease all;
  transition: 0.3s ease all;
  font-family: Poppins,Roboto,sans-serif;
  border: none;
  outline: none;
  background-color: #40A9F3;
  background-size: 720%;
  border: 2px solid #66B9F4;
  border-radius: 4px;
  box-sizing: border-box;
  font-size: 1.125em;
  text-align: center;
  color: white;
  font-weight: 600;
  width: inherit;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -webkit-text-decoration: none;
  text-decoration: none;
  padding: 0.5em 0.7em;
  font-size: 0.875em;
  cursor: pointer;
}

.c0:hover {
  background-color: #66b9f4;
}

<ButtonComponent
  small={true}
>
  <styled.button
    small={true}
    style={Object {}}
  >
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-htpNat",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "
  ",
              "
  transition: 0.3s ease all;
  font-family: Poppins, Roboto, sans-serif;

  border: none;
  outline: none;
  ",
              [Function],
              ";
  background-size: 720%;

  border: ",
              [Function],
              ";
  border-radius: 4px;

  box-sizing: border-box;
  font-size: 1.125em;
  text-align: center;
  color: ",
              [Function],
              ";
  font-weight: 600;
  width: ",
              [Function],
              ";

  user-select: none;
  text-decoration: none;

  ",
              [Function],
              ";

  /* svg {
     font-size: 1.125em;
  } */

  ",
              [Function],
              ";

  &:hover {
    ",
              [Function],
              ";
    ",
              [Function],
              ";
  }
",
              ";
",
            ],
          },
          "displayName": "styled.button",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-htpNat",
          "target": "button",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
      small={true}
      style={Object {}}
    >
      <button
        className="c0"
        style={Object {}}
      >
        Le button
      </button>
    </StyledComponent>
  </styled.button>
</ButtonComponent>
`;

exports[`<Button /> rendering block Button 1`] = `
.c0 {
  -webkit-transition: 0.3s ease all;
  transition: 0.3s ease all;
  font-family: Poppins,Roboto,sans-serif;
  border: none;
  outline: none;
  background-color: #40A9F3;
  background-size: 720%;
  border: 2px solid #66B9F4;
  border-radius: 4px;
  box-sizing: border-box;
  font-size: 1.125em;
  text-align: center;
  color: white;
  font-weight: 600;
  width: 100%;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -webkit-text-decoration: none;
  text-decoration: none;
  padding: 0.65em 2.25em;
  cursor: pointer;
}

.c0:hover {
  background-color: #66b9f4;
}

<ButtonComponent
  block={true}
>
  <styled.button
    block={true}
    style={Object {}}
  >
    <StyledComponent
      block={true}
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-htpNat",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "
  ",
              "
  transition: 0.3s ease all;
  font-family: Poppins, Roboto, sans-serif;

  border: none;
  outline: none;
  ",
              [Function],
              ";
  background-size: 720%;

  border: ",
              [Function],
              ";
  border-radius: 4px;

  box-sizing: border-box;
  font-size: 1.125em;
  text-align: center;
  color: ",
              [Function],
              ";
  font-weight: 600;
  width: ",
              [Function],
              ";

  user-select: none;
  text-decoration: none;

  ",
              [Function],
              ";

  /* svg {
     font-size: 1.125em;
  } */

  ",
              [Function],
              ";

  &:hover {
    ",
              [Function],
              ";
    ",
              [Function],
              ";
  }
",
              ";
",
            ],
          },
          "displayName": "styled.button",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-htpNat",
          "target": "button",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
      style={Object {}}
    >
      <button
        className="c0"
        style={Object {}}
      >
        Le button
      </button>
    </StyledComponent>
  </styled.button>
</ButtonComponent>
`;

exports[`<Button /> rendering no props 1`] = `
.c0 {
  -webkit-transition: 0.3s ease all;
  transition: 0.3s ease all;
  font-family: Poppins,Roboto,sans-serif;
  border: none;
  outline: none;
  background-color: #40A9F3;
  background-size: 720%;
  border: 2px solid #66B9F4;
  border-radius: 4px;
  box-sizing: border-box;
  font-size: 1.125em;
  text-align: center;
  color: white;
  font-weight: 600;
  width: inherit;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -webkit-text-decoration: none;
  text-decoration: none;
  padding: 0.65em 2.25em;
  cursor: pointer;
}

.c0:hover {
  background-color: #66b9f4;
}

<ButtonComponent>
  <styled.button
    style={Object {}}
  >
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-htpNat",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "
  ",
              "
  transition: 0.3s ease all;
  font-family: Poppins, Roboto, sans-serif;

  border: none;
  outline: none;
  ",
              [Function],
              ";
  background-size: 720%;

  border: ",
              [Function],
              ";
  border-radius: 4px;

  box-sizing: border-box;
  font-size: 1.125em;
  text-align: center;
  color: ",
              [Function],
              ";
  font-weight: 600;
  width: ",
              [Function],
              ";

  user-select: none;
  text-decoration: none;

  ",
              [Function],
              ";

  /* svg {
     font-size: 1.125em;
  } */

  ",
              [Function],
              ";

  &:hover {
    ",
              [Function],
              ";
    ",
              [Function],
              ";
  }
",
              ";
",
            ],
          },
          "displayName": "styled.button",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-htpNat",
          "target": "button",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
      style={Object {}}
    >
      <button
        className="c0"
        style={Object {}}
      >
        Le button
      </button>
    </StyledComponent>
  </styled.button>
</ButtonComponent>
`;
